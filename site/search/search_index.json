{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AWS Data Protection Workshops If you are considering protecting data in your AWS environment using methods such as encryption or certificate management, these workshops can help you learn in depth. We will be using the Cloud9 IDE environment and a combination of Python code and AWS console access for these workshops. Ubiquitous Encryption Data encryption provides a strong layer of security to protect data that you store within AWS services. AWS services can help you achieve ubiquitous encryption for data in transit as well as data at rest. Prerequisites AWS Account If you are participating in this workshop as part of an AWS event, pre-provisioned temporary accounts that are specifically initialized for this workshop might be provided by the organizers. To access your temporary account you will receive a 12-digit hash code that can be used at the AWS Event Engine Site . You will not need a username and password. If you wish to participate in this workshop without a pre-provisioned temporary account, please see the AWS Initialization and tear down section below. Browser These workshops assume that you are using the Cloud9 IDE environment . We recommend you use the latest version of Chrome or Firefox to complete this workshop. Knowledge Of Python Programming Language Basic python knowledge is sufficient to consume these workshops. Setup Workshop Environment Navigate to the Cloud9 service within your AWS console Open the Cloud9 IDE environment called workshop-environment . It takes about 30 seconds for the environment to start up. In the Cloud9 IDE environment you will find a folder called data-protection in the folder pane on the left side of the screen Right-click (on MacOS: control-click) the file named environment-setup.sh in the IDE and select Run This script takes about a minute to complete In the runner window below you should see SUCCESS: installed python dependencies followed by a list of the installed packages Workshops These workshops demonstrates server side encryption, client side encryption and certfificate management concepts within AWS. For example : How do I put an object on S3 with server side encryption ? How do I use aws encryption sdk to encrypt data in my application before sending the data to an AWS service ? What is Data Key Caching ? How can I generate X.509 certificates with AWS Certificate Manager to enable TLS on my load balancer ? How do I use AWS Certificate Manager to generate a private certificate authority ? Title Description Learning Time Teaching Time With Discussion Level 200: Server Side Encryption This workshop demonstrates server side encryption on S3 15 min 30 min Level 200: Client Side Encryption This workshop demonstrates client side encryption 15 min 30 min Level 200: Client Side Encryption With Data Key Caching This workshop demonstrates client side encryption with data key caching 15 min 30 min Level 300: Creating Private Certs ACM Private Certificate Authority - Mode-1 This workshop demonstrates how you create a AWS Certificate Manager private certificate authority(PCA) and use ACM PCA to sign a CSR to create a private certificate 40 mins 1 hour Level 300: Creating Private Certs ACM Private Certificate Authority - Mode-2 This workshop demonstrates how you create a AWS Certificate Manager private certificate authority and use this CA to create private X.509 certififcates for a private domain 40 mins 1 hour NOTE: The ACM PCA use cases (the latter 2) can only be run within the VPC where the ALB is deployed as a private DNS name space is used. This will work within the Cloud9 IDE but not from machines that are outside of the VPC. AWS Initialization tear down IMPORTANT! This section is only relevant if you are not using a pre-provisioned account. The resources used in this workshop will incur charges in the AWS account used if not torn down according to the procedure outlined below You can use a personal account or create a new AWS account to ensure you have the neccessary access. This should not be an AWS account from the company you work for. Please note that creating an AWS account takes time (credit card validation, etc.) and is not recommended when participating in the workshop during a time constrained event. Region Support Since these workshops use the Cloud9 IDE, you can use run these workshops in the following regions where the AWS Cloud9 service is available : N.Virginia (us-east-1) Ohio (us-east-2) Oregon (us-west-2) Ireland (eu-west-1) * Singapore (ap-southeast-1) Cloudformation templates for initial environment setup Please download the Data Protection Workshop cloudformation stack and launch it in your AWS account as this is required for all the workshops in this repository. To launch the stack you must go to the AWS Console and navigate to the CloudFormation service where you can choose Create Stack and upload the Cloudformation stack for the workshop. You provide a name for the stack and keep clicking next until you get to the point where it says: I acknowledge that AWS CloudFormation might create IAM resources with custom names. Acknowledge the above statement by clicking on the check box and then click on the Create button The above stack creates an Cloud9 IDE environment called workshop-environment . In addition a VPC with two subnets and an internet gateway is also created. Tear down Cloudformation stack After you have completed the workshop, you need to tear down the stack by navigating to the CloudFormation service in the AWS console and selecting the stack name you chose when launching the stack. Choose the delete action and wait for the process to complete. Note that it can take a few minutes for the stack to clean up its resources. License Summary This sample code is made available under a modified MIT license. See the LICENSE file.","title":"Overview"},{"location":"#aws-data-protection-workshops","text":"If you are considering protecting data in your AWS environment using methods such as encryption or certificate management, these workshops can help you learn in depth. We will be using the Cloud9 IDE environment and a combination of Python code and AWS console access for these workshops.","title":"AWS Data Protection Workshops"},{"location":"#ubiquitous-encryption","text":"Data encryption provides a strong layer of security to protect data that you store within AWS services. AWS services can help you achieve ubiquitous encryption for data in transit as well as data at rest.","title":"Ubiquitous Encryption"},{"location":"#prerequisites","text":"","title":"Prerequisites"},{"location":"#aws-account","text":"If you are participating in this workshop as part of an AWS event, pre-provisioned temporary accounts that are specifically initialized for this workshop might be provided by the organizers. To access your temporary account you will receive a 12-digit hash code that can be used at the AWS Event Engine Site . You will not need a username and password. If you wish to participate in this workshop without a pre-provisioned temporary account, please see the AWS Initialization and tear down section below.","title":"AWS Account"},{"location":"#browser","text":"These workshops assume that you are using the Cloud9 IDE environment . We recommend you use the latest version of Chrome or Firefox to complete this workshop.","title":"Browser"},{"location":"#knowledge-of-python-programming-language","text":"Basic python knowledge is sufficient to consume these workshops.","title":"Knowledge Of Python Programming Language"},{"location":"#setup-workshop-environment","text":"Navigate to the Cloud9 service within your AWS console Open the Cloud9 IDE environment called workshop-environment . It takes about 30 seconds for the environment to start up. In the Cloud9 IDE environment you will find a folder called data-protection in the folder pane on the left side of the screen Right-click (on MacOS: control-click) the file named environment-setup.sh in the IDE and select Run This script takes about a minute to complete In the runner window below you should see SUCCESS: installed python dependencies followed by a list of the installed packages","title":"Setup Workshop Environment"},{"location":"#workshops","text":"These workshops demonstrates server side encryption, client side encryption and certfificate management concepts within AWS. For example : How do I put an object on S3 with server side encryption ? How do I use aws encryption sdk to encrypt data in my application before sending the data to an AWS service ? What is Data Key Caching ? How can I generate X.509 certificates with AWS Certificate Manager to enable TLS on my load balancer ? How do I use AWS Certificate Manager to generate a private certificate authority ? Title Description Learning Time Teaching Time With Discussion Level 200: Server Side Encryption This workshop demonstrates server side encryption on S3 15 min 30 min Level 200: Client Side Encryption This workshop demonstrates client side encryption 15 min 30 min Level 200: Client Side Encryption With Data Key Caching This workshop demonstrates client side encryption with data key caching 15 min 30 min Level 300: Creating Private Certs ACM Private Certificate Authority - Mode-1 This workshop demonstrates how you create a AWS Certificate Manager private certificate authority(PCA) and use ACM PCA to sign a CSR to create a private certificate 40 mins 1 hour Level 300: Creating Private Certs ACM Private Certificate Authority - Mode-2 This workshop demonstrates how you create a AWS Certificate Manager private certificate authority and use this CA to create private X.509 certififcates for a private domain 40 mins 1 hour NOTE: The ACM PCA use cases (the latter 2) can only be run within the VPC where the ALB is deployed as a private DNS name space is used. This will work within the Cloud9 IDE but not from machines that are outside of the VPC.","title":"Workshops"},{"location":"#aws-initialization-tear-down","text":"IMPORTANT! This section is only relevant if you are not using a pre-provisioned account. The resources used in this workshop will incur charges in the AWS account used if not torn down according to the procedure outlined below You can use a personal account or create a new AWS account to ensure you have the neccessary access. This should not be an AWS account from the company you work for. Please note that creating an AWS account takes time (credit card validation, etc.) and is not recommended when participating in the workshop during a time constrained event.","title":"AWS Initialization &amp; tear down"},{"location":"#region-support","text":"Since these workshops use the Cloud9 IDE, you can use run these workshops in the following regions where the AWS Cloud9 service is available : N.Virginia (us-east-1) Ohio (us-east-2) Oregon (us-west-2) Ireland (eu-west-1) * Singapore (ap-southeast-1)","title":"Region Support"},{"location":"#cloudformation-templates-for-initial-environment-setup","text":"Please download the Data Protection Workshop cloudformation stack and launch it in your AWS account as this is required for all the workshops in this repository. To launch the stack you must go to the AWS Console and navigate to the CloudFormation service where you can choose Create Stack and upload the Cloudformation stack for the workshop. You provide a name for the stack and keep clicking next until you get to the point where it says: I acknowledge that AWS CloudFormation might create IAM resources with custom names. Acknowledge the above statement by clicking on the check box and then click on the Create button The above stack creates an Cloud9 IDE environment called workshop-environment . In addition a VPC with two subnets and an internet gateway is also created.","title":"Cloudformation templates for initial environment setup"},{"location":"#tear-down-cloudformation-stack","text":"After you have completed the workshop, you need to tear down the stack by navigating to the CloudFormation service in the AWS console and selecting the stack name you chose when launching the stack. Choose the delete action and wait for the process to complete. Note that it can take a few minutes for the stack to clean up its resources.","title":"Tear down Cloudformation stack"},{"location":"#license-summary","text":"This sample code is made available under a modified MIT license. See the LICENSE file.","title":"License Summary"},{"location":"contribute/","text":"Contributing Guidelines Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community. Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution. Reporting Bugs/Feature Requests We welcome you to use the GitHub issue tracker to report bugs or suggest features. When filing an issue, please check existing open , or recently closed , issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful: A reproducible test case or series of steps The version of our code being used Any modifications you've made relevant to the bug Anything unusual about your environment or deployment Contributing via Pull Requests Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that: You are working against the latest source on the master branch. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already. You open an issue to discuss any significant work - we would hate for your time to be wasted. To send us a pull request, please: Fork the repository. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change. Ensure local tests pass. Commit to your fork using clear commit messages. Send us a pull request, answering any default questions in the pull request interface. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation. GitHub provides additional document on forking a repository and creating a pull request . Finding contributions to work on Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels ((enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start. Code of Conduct This project has adopted the Amazon Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact opensource-codeofconduct@amazon.com with any additional questions or comments. Security issue notifications If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page . Please do not create a public github issue. Licensing See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution. We may ask you to sign a Contributor License Agreement (CLA) for larger changes.","title":"Contributing"},{"location":"contribute/#contributing-guidelines","text":"Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional documentation, we greatly value feedback and contributions from our community. Please read through this document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your bug report or contribution.","title":"Contributing Guidelines"},{"location":"contribute/#reporting-bugsfeature-requests","text":"We welcome you to use the GitHub issue tracker to report bugs or suggest features. When filing an issue, please check existing open , or recently closed , issues to make sure somebody else hasn't already reported the issue. Please try to include as much information as you can. Details like these are incredibly useful: A reproducible test case or series of steps The version of our code being used Any modifications you've made relevant to the bug Anything unusual about your environment or deployment","title":"Reporting Bugs/Feature Requests"},{"location":"contribute/#contributing-via-pull-requests","text":"Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that: You are working against the latest source on the master branch. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already. You open an issue to discuss any significant work - we would hate for your time to be wasted. To send us a pull request, please: Fork the repository. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change. Ensure local tests pass. Commit to your fork using clear commit messages. Send us a pull request, answering any default questions in the pull request interface. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation. GitHub provides additional document on forking a repository and creating a pull request .","title":"Contributing via Pull Requests"},{"location":"contribute/#finding-contributions-to-work-on","text":"Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels ((enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.","title":"Finding contributions to work on"},{"location":"contribute/#code-of-conduct","text":"This project has adopted the Amazon Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact opensource-codeofconduct@amazon.com with any additional questions or comments.","title":"Code of Conduct"},{"location":"contribute/#security-issue-notifications","text":"If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page . Please do not create a public github issue.","title":"Security issue notifications"},{"location":"contribute/#licensing","text":"See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution. We may ask you to sign a Contributor License Agreement (CLA) for larger changes.","title":"Licensing"},{"location":"license/","text":"License MIT License Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"usecase-1/","text":"Server Side Encryption This workshop demonstrates server side encryption using AWS KMS and S3 Let's look at some concepts : Let's do some server side encryption Open the Cloud9 IDE environment called workshop-environment and navigate to the data-protection/usecase-1 directory. Follow the instructions below: 1. Run the module named kms_key_creation-Step-1.py This module will create a KMS master key with the key alias kms_key_sse_usecase_1 . In the following steps we will refer to this master key using the alias. Browse to the KMS console and you should find the key alias kms_key_sse_usecase_1 under customer managed keys 2. Run the module named usecase-1-Step-2.py This module uploads the plaintext_u.txt file to an S3 bucket named dp-workshop-builderXXXX . Before the file is stored on S3 it is server side encrypted using the KMS key alias kms_key_sse_usecase_1 3. Inspect the encrypted file in S3 In the AWS console, navigate to the S3 service and look for the bucket named dp-workshop-builderXXXX . In the bucket there should be a file called encrypted_e.txt . This file was encrypted using a Data key under the KMS master key key_sse_usecase_1 . Take a look at the properties of the file encrypted_e.txt . You will find that it's encrypted using AWS-KMS as shown in the picture below: 4. Compare the decrypted file from S3 with the original The usecase-1-Step-2.py python module does a S3 getobject API Call on encrypted_e.txt which is decrypted by the S3 service and retrieved over TLS into your Cloud9 environment. In the folder usecase-1 ,you should see a file called plaintext_cycled_u.txt . Compare its contents to the original file named plaintext_u.txt . 5. Run the module named usecase-1-cleanup-Step-3.py This modules deletes the kms key and it's alias that we created in kms_key_creation-Step-1.py and also deletes all the files that were created in the usecase-1 folder. Please remember that when you run usecase-1-cleanup-Step-3.py and you want to re-run this use case, you will have to start from the beginning.","title":"Home"},{"location":"usecase-1/#server-side-encryption","text":"This workshop demonstrates server side encryption using AWS KMS and S3","title":"Server Side Encryption"},{"location":"usecase-1/#lets-look-at-some-concepts","text":"","title":"Let's look at some concepts :"},{"location":"usecase-1/#lets-do-some-server-side-encryption","text":"Open the Cloud9 IDE environment called workshop-environment and navigate to the data-protection/usecase-1 directory. Follow the instructions below:","title":"Let's do some server side encryption"},{"location":"usecase-1/#1-run-the-module-named-kms_key_creation-step-1py","text":"This module will create a KMS master key with the key alias kms_key_sse_usecase_1 . In the following steps we will refer to this master key using the alias. Browse to the KMS console and you should find the key alias kms_key_sse_usecase_1 under customer managed keys","title":"1. Run the module named kms_key_creation-Step-1.py"},{"location":"usecase-1/#2-run-the-module-named-usecase-1-step-2py","text":"This module uploads the plaintext_u.txt file to an S3 bucket named dp-workshop-builderXXXX . Before the file is stored on S3 it is server side encrypted using the KMS key alias kms_key_sse_usecase_1","title":"2. Run the module named usecase-1-Step-2.py"},{"location":"usecase-1/#3-inspect-the-encrypted-file-in-s3","text":"In the AWS console, navigate to the S3 service and look for the bucket named dp-workshop-builderXXXX . In the bucket there should be a file called encrypted_e.txt . This file was encrypted using a Data key under the KMS master key key_sse_usecase_1 . Take a look at the properties of the file encrypted_e.txt . You will find that it's encrypted using AWS-KMS as shown in the picture below:","title":"3. Inspect the encrypted file in S3"},{"location":"usecase-1/#4-compare-the-decrypted-file-from-s3-with-the-original","text":"The usecase-1-Step-2.py python module does a S3 getobject API Call on encrypted_e.txt which is decrypted by the S3 service and retrieved over TLS into your Cloud9 environment. In the folder usecase-1 ,you should see a file called plaintext_cycled_u.txt . Compare its contents to the original file named plaintext_u.txt .","title":"4. Compare the decrypted file from S3 with the original"},{"location":"usecase-1/#5-run-the-module-named-usecase-1-cleanup-step-3py","text":"This modules deletes the kms key and it's alias that we created in kms_key_creation-Step-1.py and also deletes all the files that were created in the usecase-1 folder. Please remember that when you run usecase-1-cleanup-Step-3.py and you want to re-run this use case, you will have to start from the beginning.","title":"5. Run the module named usecase-1-cleanup-Step-3.py"}]}